<template>
    <div class="col-md-3">
        <div class="box box-solid">
            <div class="box-header with-border">
                <h3 class="box-title">Шаблоны</h3>

                <div class="box-tools">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body no-padding" style="" v-if="!load">
                <ul class="nav nav-pills nav-stacked">
                    <li v-for="(directory, key, index) in directories" :key="index">
                        <a href="#" @click.prevent="getFolder(key)">
                            <i class="fa fa-folder"></i> {{ directory.basename }}</a>
                        <ul class="nav nav-pills nav-stacked nav-sub">
                            <li v-for="(directory, key, index) in directory.subDirectories" :key="index">
                                <a href="#" @click.prevent="getFolder(key)">
                                    <i class="fa fa-folder"></i> {{ directory.basename }}</a>
                            </li>
                            <li v-for="(file, key, index) in directory.subFiles" :key="index">
                                <a href="#" @click.prevent="getFolder(key)">
                                    <i class="fa fa-file-code-o"></i> {{ file.basename }}</a>
                            </li>
                        </ul>
                    </li>
                    <li v-for="(file, key, index) in files" :key="index">
                        <a href="#" @click.prevent="getFile(index)">
                            <i class="fa fa-file-code-o"></i> {{ file.basename }}</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</template>

<script>
    export default {
        props: ['active', 'content'],
        created() {
            this.getContent();
        },
        data() {
            return {
                directories: null,
                files: null,
                load: false
            }
        },
        methods: {
            getContent() {
                axios
                    .post('/admin/template-manager/explore')
                    .then(res => {
                        this.directories = res.data.directories;
                        this.files = res.data.files;
                    })
                    .catch(error => console.log(error))
            },
            getFolder(index) {

                axios
                    .post('/admin/template-manager/explore', {
                        path: this.directories[index].path
                    })
                    .then(res => {
                        console.log(res)
                        this.directories[index].subDirectories = res.data.directories;
                        this.directories[index].subFiles = res.data.files;
                        this.load = true;
                        this.load = false;
                    })
                    .catch(error => console.log(error))

            }
        }
    }
</script>

<style>
    .nav-sub {
        padding-left: 20px;
    }
</style>